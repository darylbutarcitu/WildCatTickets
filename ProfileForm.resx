<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tabFormPallet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADHe5AApz
        twEUgb8JFYbCFhWKwx0QhsMeEofEFxeLyAoPhcIBEYfDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJcbQABmisAhF9
        vR8UhsRbFonFlRiIxb4bhsPVHYXE3yqTy+Amk83XG4/NwBqU0JYZltJaGJXRHx6QzAIbks4AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgJbABQJXwEsIHFAMiRyV09c
        kT8rhr2FGH212xVqmvwWUoX/Gj+B/yE3iP8rOJT/iJnG/3SKwv8nSqX/Il+t/x55vvwakM3bFZXSiRaW
        0idMo8cAIpjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApGWsAPit1CTMs
        fLsmLH3/XF2U9Zqxx/2En7P/ZGt2/0E/X/8vKWn/KB53/ysfhP+Xkb7/h4C6/ykdjP8hGoP/HSB+/zdW
        mP9Rocj/IpjQ2xaW02QdmNMIG5jTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGqKAAcA
        TwBGRHstJzF33xpNmP9hbaL/ubvA/7m6xf/V193/yMnU/7m5zP+kosT/ioS6/7az0P+TjcL/MiWS/xwU
        gv8QDHP/Mi99/7u+yf+Qt8v/NZnK9xaW0o4cmdMPGpnTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABVY5gAUl+VHGuBvcV0j8b+SnK0/3V9pf9+hIn/tLfA/+Pm6P/n6ev/6Onr/+Xm6v/h4uj/3d3m/9LR
        4f+2s9P/ko/A/2hlpv9QTpX/vr/O/9/f3/+wxM7/QJzI/BeY1JYdnNcMHJrVAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAa22NAFd1yABeb6dmbIfJ+Yqr5P97k87/lZiy/4qQlP/Fx9H/6Ovs/+vs7v/k5ur/8/T0//n6
        +f/6+vn/9vb3//Dw8//p6e7/39/o/9LS4P/e3+b/3d3k/9zb4f+isMb/LIW/+hiU03kpn9UCH5fSAAAA
        AAAAAAAAAAAAAAAAAAAWZp4AD1+TGlx9tMyMq+D/mbzq/5Kp2v+dobH/naGo/9bX3//t7+//2dvj/4aG
        sP+dnb//sLDL/8HB1v/m5u7/9PT3//v7+//7+/r/9vX1/+fm7P/T1N3/xcbS/3FsrP81PJP/K2i06h2c
        2EEdmdcAKJrPAAAAAAAAAAAADWCbAFaazQAOZKB9UXu0/3+d2v+Utuj/ma3Z/5OZof+bn6f/4OHm//L0
        8/+ztMv/amuf/1tblv9fX5r/iYmz/1JSkv95eKr/oqLF/8fH2f+2xM//y9Hb/6iusv+pq7r/VnOz/zVY
        p/87ZKr/HZzXsSOm3wsioNoAAAAAAAAAAAAJYaEABF2eIhVvqdppi7P/haDT/3aVzf+Cirr/nKGl/66w
        uf/Nz9v/qavF/4iJsP9kZZv/d3eo/3V1qP94d6r/Q0OK/2Jinf+MjLf/gICw/77P2//BydX/k5qf/56h
        uP85ZKb/KT+H/3mDqf8xmMv0HKTgSR6j3gA6jMcAD16XAAdmpgAEYqRqOISw/oKFoP8wPYz/JUqX/3Z2
        o/+Um53/xcbP/4eJrv8eHm7/bGyg/3Fxo/9vbqT/bW2j/4GBsP+FhbP/YF+d/3V1qv96eq7/+vr8/9LT
        2/+lq6//lZi6/yJGhP9ZbqT/manQ/1GVxf8dodycR7jkAi2l2wAJYp4AA1SSBglqqK9jlbH/eHCY/y1G
        lP87bKv/hoim/4OKjv/DxND/cXKg/0NDhP9OToz/U1OR/35/rf9eXpv/UlKT/2trpP93dqv/Z2aj/4aG
        tf/b2+n/wcPK/5qfpf95grH/I0B7/22Cwf+YseL/eqPO/yOd1dYosOcYKangAAhjoQABXJ0aFXKs2oKf
        r/9vZpb/MDCC/0VRmP+xscP/tLe+/9PV3P/b3eP/z9Dc/6eoxP+Vlbn/q6vJ/1dWlv9fXpv/eXqs/5ub
        wf8/Pov/cnKq/7291/+9wMb/oqWw/15ppP8tQ4P/gpvZ/5236P+SrdT/MZ3P8SOx6DcmreQACGWkAAFg
        oTAhea/tlKWv/5+frP+JhKP/cWyb/6Giuv/AwdL/2Nrh/9vc5P/k5ev/7O7x//Dy8//x8vT/3d3o/+bm
        7v+ur8z/q6vL/3l4rP9dXJ7/v77W/8HFyP+4ucr/TGmo/01jqP+EoN//nrrt/8DO4/9CoMz8IbHpUyWx
        5wAIZ6UAAWOjPyl/sfadqLD/s7W4/8HDxf+Li6H/JSNp/z46kf9gXp//c3OW/5eXpP+1tcD/zc3X/93d
        5v/n5u3/7+7y//j4+f/5+fr/8PD1/83N4f/Jydj/nKSo/6qsyP9Peb3/UWez/6O75v+50PP/1dvl/0yi
        yv8isutgJrTqAAlopwACZKZCKX+y95+qsf+0trn/wMHE/8fJy/+Ih6f/Qj5//y8tYP8oKD//Ghol/zAw
        OP+MjZH/293e/+Xm6f/k5ev/1dbf/9/e6P/q6fD/9fT4/9/e5//GyM3/oaTN/2CR0P9aYaz/mZuu/8TI
        zP/i5Ob/TKPL/yW27F4pt+wACWqqAAFmqDQifbPwmqmz/7a2uv/Bw8X/rbbA/6Kvvv+DnLX/fZCi/5OW
        mP98fn//g4WF/62urv/Nzc3/6uvr/+7v7v+oqa//aGKY/4J6uv+wrNj/x8Th/+Hf6/+Vj8T/SUqo/2lj
        qv+/vsL/0dDP/9ve4v9EpM77KLrvTiy57QAKa6oAA2anHRZ3s9yKpLT/uLi7/7K5wP9GbZj/DEeE/x9f
        k/+Mnqn/pKip/4qPk/+TmJz/r7Gz/8DBwP+/v7//s7Oz/83N0P+AfKL/d2+x/4yCx/+zrNn/9PP4/9nW
        6P+yrND/gXyg/9nZ2v/t7ez/w8/Y/zam1e4svvIyMLrsAA5sqQAKZKIGCnOysmmatv+5ubv/l6S1/xlG
        f/8BS43/Rn6m/6+5vP+Wp6//cIma/624xP/HytP/fIij/5Wgt//a3OH/3uPn/+Hk4//X2tr/xdrm//D3
        +v/////////+//v7+v/Kysr/8/Pz//r4+P+Yucz/LK3gzjTC8xM0uuoAGXCfAAZ0twAGcbJtO4u4/6+1
        uv+xuMD/NWaZ/wlkpv82l8j/gr7V/5nBzf+ZrKP/sry8/0l/q/8uXZf/SnKq/8vY6f/b7PT/0Ofv/+Tr
        7f+dzeT/abTd/7jQ5f/0+Pr//Pv7//r6+v/6+vr/6unq/2Goyf8qt+yPAJf5AD246AAAAAAADXazAAlz
        siQWfbnchaa6/7+/wv+js8L/L3On/w51tP80jLn/kJyH/0NEIf8+TEj/I4e9/0Wx4f9gv+X/v9rW/9ji
        3P/D5PH/5fP2/8jq9f9OteT/UKbZ/+Xy9//8+/v/+vr6//r5+P+1x9L/OKrZ7jDA8zwxvvAAAAAAAAAA
        AAAUd7MAAJ/+AAl5un09j7z+s7rB/7a1vP8zTHf/AlKS/xtsov9xgID/Mjcs/xo8Vf8nlcv/NK/j/066
        2f9XaUj/e39Y/53G0/+d1+//oeD2/2zB6/9prt7/2+z0//r5+f/5+fn/4uPl/2Gpy/8tueyfPsbzBji9
        7gAAAAAAAAAAAAAAAAAPfboADHu4GBCCvsJhmrr/YnGb/0pbiP8nVX3/FTxc/xE8Y/8SK0X/Nlxy/0a0
        4f9QwOv/WarD/1FtXP+qqo//fK3E/0i76P9ky/D/esHp/7Tb7//4+Pj/+Pf3/+7t7f+Ks8r/M7Lj3DTC
        9C40wPEAT7vlAAAAAAAAAAAAAAAAAB2BsQAKg8MAC4XCOxlrqOBdgrr/pa64/0Rabv8lT2z/Kzg//0FU
        XP9OirT/QpbS/1qv4P9lkqT/O2Z6/0+Fqf9EmsT/WcHp/5fN5P/k8PT/8PP0//b29v/u7Oz/mrnM/zqu
        3fAywfJbGcL4AD2/7AAAAAAAAAAAAAAAAAAAAAAAAAAAAA02ZQAAAAkDFzSAqGyBrP+EiI3/QHSU/0ev
        3P9Mocf/OHq0/yRbqv8zZbb/UIbL/2+cwv9GVFn/Jkpc/16UqP9mn8//e4Sx//Py8v/08/L/4eLj/422
        y/86rt3yMcDxb0TF7gM6wO0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQQxAAAAKg8NEk/JSU9v/015
        mP5Er93/hMDX/67Cz/95gq//SX26/zZEof9Pe8X/XILK/2auy/9Lk7L/pM7e/8vY6v9xhr7/0tPb/7vM
        1f9nrs7/MrLj4zC/8mBCxO0EOsHtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBDEAAQEuGwkK
        PNwkO2vROpfIbyKf2Kk1odL2a63L/6O9yv+3wcv/s7PI/7bA0/+8wNT/eafH/xZ8vP97v97/3efw/3aX
        zv9bmsX/PrDe9yy47LAxwfE2WMPnATvA7QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcG
        OgAHBjocDQxNkhkvgCUHAE8AJ5jOCx+c1lQgodm0LaXX7Ueq0/5ksM//ebTN/4O4zf97scr/L4e7/zSN
        w/+lvt7/SnG8+yWR0bAvw/RQOMDwDDPA8gBbveMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFQ9PABcRUwYdFWEQCgg2AFU42gCDp7UAF6TfADSj0gknptwzIqngaCOr4pQlruOuJ6/kuSmx
        5rYrsuekGnu5oDddqfMUIIPiBxRuIgkPaQBSxPcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpssUAdLK+AEG0
        3QQ4tOQHObflBl/h/AEAZ4kECyR6hQkMb74HA14LCgdiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0PXAAND10iDw5rXRQA2wARDGoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////wD///gAH/+AAA//gAAD/4AAAf8AAAD/AAAAfgAAAH4AAAA8AA
        AAPAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAHAAAADwAAAA+AAAAPgAAAH8AAAD/AA
        AA/wAAAf8AAAP/EAAP/zwAP///wD////5/8=
</value>
  </data>
</root>